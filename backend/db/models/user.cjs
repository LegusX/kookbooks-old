"use strict";
const { Model } = require("sequelize");
module.exports = (sequelize, DataTypes) => {
	class User extends Model {
		/**
		 * Helper method for defining associations.
		 * This method is not a part of Sequelize lifecycle.
		 * The `models/index` file will call this method automatically.
		 */
		static associate(models) {
			// define association here
			this.hasMany(models.Book);
			this.hasMany(models.Recipe);
			this.hasMany(models.Image);
			this.Book = models.Book;
			this.Recipe = models.Recipe;
			this.Image = models.Image;
		}

		//static methods
		static async get(id) {
			const user = await this.findOne({ where: { id: id } });
			return user;
		}
		static async getBasic(id) {
			const user = await this.get(id);
			if (user === null) return null;

			return user.clean();
		}

		//dynamic methods
		//only return non-sensitive information
		clean() {
			return {
				name: this.dataValues.name,
				username: this.dataValues.username,
			};
		}
	}
	User.init(
		{
			id: {
				type: DataTypes.UUIDV4,
				defaultValue: DataTypes.UUIDV4,
				primaryKey: true,
			},
			name: {
				type: DataTypes.STRING,
				allowNull: false,
			},
			//Username with a max length of 15 characters
			username: {
				type: DataTypes.STRING,
				allowNull: false,
				unique: true,
			},
			//Password of length 60. hash generated by bcrypt
			password: {
				type: DataTypes.STRING,
			},
			email: {
				type: DataTypes.STRING,
			},
		},
		{
			sequelize,
			modelName: "User",
		}
	);
	return User;
};
